// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityInfo.proto

package emu.grasscutter.net.proto;

public final class ActivityInfoOuterClass {
  private ActivityInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ActivityInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ActivityInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool MIJLJDBEEAA = 1;</code>
     * @return The mIJLJDBEEAA.
     */
    boolean getMIJLJDBEEAA();

    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @return A list containing the meetCondList.
     */
    java.util.List<java.lang.Integer> getMeetCondListList();
    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @return The count of meetCondList.
     */
    int getMeetCondListCount();
    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @param index The index of the element to return.
     * @return The meetCondList at the given index.
     */
    int getMeetCondList(int index);

    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> 
        getWatcherInfoListList();
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo getWatcherInfoList(int index);
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    int getWatcherInfoListCount();
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder> 
        getWatcherInfoListOrBuilderList();
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder getWatcherInfoListOrBuilder(
        int index);

    /**
     * <code>uint32 end_time = 4;</code>
     * @return The endTime.
     */
    int getEndTime();

    /**
     * <code>bool is_finished = 6;</code>
     * @return The isFinished.
     */
    boolean getIsFinished();

    /**
     * <code>uint32 begin_time = 9;</code>
     * @return The beginTime.
     */
    int getBeginTime();

    /**
     * <code>bool IEPMKHMOCNI = 10;</code>
     * @return The iEPMKHMOCNI.
     */
    boolean getIEPMKHMOCNI();

    /**
     * <code>uint32 schedule_id = 11;</code>
     * @return The scheduleId.
     */
    int getScheduleId();

    /**
     * <code>uint32 activity_id = 12;</code>
     * @return The activityId.
     */
    int getActivityId();

    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @return A list containing the iOFIKNBFOHI.
     */
    java.util.List<java.lang.Integer> getIOFIKNBFOHIList();
    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @return The count of iOFIKNBFOHI.
     */
    int getIOFIKNBFOHICount();
    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @param index The index of the element to return.
     * @return The iOFIKNBFOHI at the given index.
     */
    int getIOFIKNBFOHI(int index);

    /**
     * <code>uint32 activity_type = 14;</code>
     * @return The activityType.
     */
    int getActivityType();

    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    int getBPAHOJFDILGCount();
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    boolean containsBPAHOJFDILG(
        int key);
    /**
     * Use {@link #getBPAHOJFDILGMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBPAHOJFDILG();
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBPAHOJFDILGMap();
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */

    int getBPAHOJFDILGOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */

    int getBPAHOJFDILGOrThrow(
        int key);

    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> 
        getActivityPushTipsDataListList();
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData getActivityPushTipsDataList(int index);
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    int getActivityPushTipsDataListCount();
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder> 
        getActivityPushTipsDataListOrBuilderList();
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder getActivityPushTipsDataListOrBuilder(
        int index);

    /**
     * <code>bool CDDJDJIEPPJ = 190;</code>
     * @return The cDDJDJIEPPJ.
     */
    boolean getCDDJDJIEPPJ();

    /**
     * <code>uint64 GJBJNMHOGJD = 215;</code>
     * @return The gJBJNMHOGJD.
     */
    long getGJBJNMHOGJD();

    /**
     * <code>bool NKFKPIGEDPE = 370;</code>
     * @return The nKFKPIGEDPE.
     */
    boolean getNKFKPIGEDPE();

    /**
     * <code>uint32 first_day_start_time = 533;</code>
     * @return The firstDayStartTime.
     */
    int getFirstDayStartTime();

    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @return A list containing the nLHLFBLHABL.
     */
    java.util.List<java.lang.Integer> getNLHLFBLHABLList();
    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @return The count of nLHLFBLHABL.
     */
    int getNLHLFBLHABLCount();
    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @param index The index of the element to return.
     * @return The nLHLFBLHABL at the given index.
     */
    int getNLHLFBLHABL(int index);

    /**
     * <code>bool IAFLDHGIHHL = 935;</code>
     * @return The iAFLDHGIHHL.
     */
    boolean getIAFLDHGIHHL();

    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @return A list containing the gECKEENCMOA.
     */
    java.util.List<java.lang.Long> getGECKEENCMOAList();
    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @return The count of gECKEENCMOA.
     */
    int getGECKEENCMOACount();
    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @param index The index of the element to return.
     * @return The gECKEENCMOA at the given index.
     */
    long getGECKEENCMOA(int index);

    /**
     * <code>uint32 IOIPJEMJLPP = 1179;</code>
     * @return The iOIPJEMJLPP.
     */
    int getIOIPJEMJLPP();

    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @return A list containing the hIGJMLDHFIH.
     */
    java.util.List<java.lang.Integer> getHIGJMLDHFIHList();
    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @return The count of hIGJMLDHFIH.
     */
    int getHIGJMLDHFIHCount();
    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @param index The index of the element to return.
     * @return The hIGJMLDHFIH at the given index.
     */
    int getHIGJMLDHFIH(int index);

    /**
     * <code>uint32 cur_score = 1405;</code>
     * @return The curScore.
     */
    int getCurScore();

    /**
     * <code>uint32 MFEJOIGPMGL = 1521;</code>
     * @return The mFEJOIGPMGL.
     */
    int getMFEJOIGPMGL();

    /**
     * <code>bool NEDGLDBBHJM = 1555;</code>
     * @return The nEDGLDBBHJM.
     */
    boolean getNEDGLDBBHJM();

    /**
     * <code>uint32 ADMOADOKGGH = 1707;</code>
     * @return The aDMOADOKGGH.
     */
    int getADMOADOKGGH();

    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    int getLCEEJDLHMLFCount();
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    boolean containsLCEEJDLHMLF(
        int key);
    /**
     * Use {@link #getLCEEJDLHMLFMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLCEEJDLHMLF();
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLCEEJDLHMLFMap();
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */

    int getLCEEJDLHMLFOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */

    int getLCEEJDLHMLFOrThrow(
        int key);

    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     * @return Whether the musicGameInfo field is set.
     */
    boolean hasMusicGameInfo();
    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     * @return The musicGameInfo.
     */
    emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo getMusicGameInfo();
    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     */
    emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder getMusicGameInfoOrBuilder();

    public emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.DetailCase getDetailCase();
  }
  /**
   * Protobuf type {@code ActivityInfo}
   */
  public static final class ActivityInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ActivityInfo)
      ActivityInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ActivityInfo.newBuilder() to construct.
    private ActivityInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActivityInfo() {
      meetCondList_ = emptyIntList();
      watcherInfoList_ = java.util.Collections.emptyList();
      iOFIKNBFOHI_ = emptyIntList();
      activityPushTipsDataList_ = java.util.Collections.emptyList();
      nLHLFBLHABL_ = emptyIntList();
      gECKEENCMOA_ = emptyLongList();
      hIGJMLDHFIH_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ActivityInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ActivityInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              mIJLJDBEEAA_ = input.readBool();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                meetCondList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              meetCondList_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                meetCondList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                meetCondList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                watcherInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              watcherInfoList_.add(
                  input.readMessage(emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.parser(), extensionRegistry));
              break;
            }
            case 32: {

              endTime_ = input.readUInt32();
              break;
            }
            case 48: {

              isFinished_ = input.readBool();
              break;
            }
            case 72: {

              beginTime_ = input.readUInt32();
              break;
            }
            case 80: {

              iEPMKHMOCNI_ = input.readBool();
              break;
            }
            case 88: {

              scheduleId_ = input.readUInt32();
              break;
            }
            case 96: {

              activityId_ = input.readUInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                iOFIKNBFOHI_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              iOFIKNBFOHI_.addInt(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                iOFIKNBFOHI_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                iOFIKNBFOHI_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {

              activityType_ = input.readUInt32();
              break;
            }
            case 250: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                bPAHOJFDILG_ = com.google.protobuf.MapField.newMapField(
                    BPAHOJFDILGDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              bPAHOJFDILG__ = input.readMessage(
                  BPAHOJFDILGDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bPAHOJFDILG_.getMutableMap().put(
                  bPAHOJFDILG__.getKey(), bPAHOJFDILG__.getValue());
              break;
            }
            case 922: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                activityPushTipsDataList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData>();
                mutable_bitField0_ |= 0x00000010;
              }
              activityPushTipsDataList_.add(
                  input.readMessage(emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.parser(), extensionRegistry));
              break;
            }
            case 1520: {

              cDDJDJIEPPJ_ = input.readBool();
              break;
            }
            case 1720: {

              gJBJNMHOGJD_ = input.readUInt64();
              break;
            }
            case 2960: {

              nKFKPIGEDPE_ = input.readBool();
              break;
            }
            case 4264: {

              firstDayStartTime_ = input.readUInt32();
              break;
            }
            case 4608: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                nLHLFBLHABL_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              nLHLFBLHABL_.addInt(input.readUInt32());
              break;
            }
            case 4610: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                nLHLFBLHABL_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                nLHLFBLHABL_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 6890: {
              emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder subBuilder = null;
              if (detailCase_ == 861) {
                subBuilder = ((emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_).toBuilder();
              }
              detail_ =
                  input.readMessage(emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_);
                detail_ = subBuilder.buildPartial();
              }
              detailCase_ = 861;
              break;
            }
            case 7480: {

              iAFLDHGIHHL_ = input.readBool();
              break;
            }
            case 8144: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                gECKEENCMOA_ = newLongList();
                mutable_bitField0_ |= 0x00000040;
              }
              gECKEENCMOA_.addLong(input.readUInt64());
              break;
            }
            case 8146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                gECKEENCMOA_ = newLongList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                gECKEENCMOA_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 9432: {

              iOIPJEMJLPP_ = input.readUInt32();
              break;
            }
            case 9656: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                hIGJMLDHFIH_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              hIGJMLDHFIH_.addInt(input.readUInt32());
              break;
            }
            case 9658: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                hIGJMLDHFIH_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                hIGJMLDHFIH_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 11240: {

              curScore_ = input.readUInt32();
              break;
            }
            case 12168: {

              mFEJOIGPMGL_ = input.readUInt32();
              break;
            }
            case 12440: {

              nEDGLDBBHJM_ = input.readBool();
              break;
            }
            case 13656: {

              aDMOADOKGGH_ = input.readUInt32();
              break;
            }
            case 14946: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                lCEEJDLHMLF_ = com.google.protobuf.MapField.newMapField(
                    LCEEJDLHMLFDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              lCEEJDLHMLF__ = input.readMessage(
                  LCEEJDLHMLFDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              lCEEJDLHMLF_.getMutableMap().put(
                  lCEEJDLHMLF__.getKey(), lCEEJDLHMLF__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          meetCondList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          watcherInfoList_ = java.util.Collections.unmodifiableList(watcherInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          iOFIKNBFOHI_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          activityPushTipsDataList_ = java.util.Collections.unmodifiableList(activityPushTipsDataList_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          nLHLFBLHABL_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          gECKEENCMOA_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          hIGJMLDHFIH_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 31:
          return internalGetBPAHOJFDILG();
        case 1868:
          return internalGetLCEEJDLHMLF();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.class, emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.Builder.class);
    }

    private int detailCase_ = 0;
    private java.lang.Object detail_;
    public enum DetailCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MUSIC_GAME_INFO(861),
      DETAIL_NOT_SET(0);
      private final int value;
      private DetailCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DetailCase valueOf(int value) {
        return forNumber(value);
      }

      public static DetailCase forNumber(int value) {
        switch (value) {
          case 861: return MUSIC_GAME_INFO;
          case 0: return DETAIL_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DetailCase
    getDetailCase() {
      return DetailCase.forNumber(
          detailCase_);
    }

    public static final int MIJLJDBEEAA_FIELD_NUMBER = 1;
    private boolean mIJLJDBEEAA_;
    /**
     * <code>bool MIJLJDBEEAA = 1;</code>
     * @return The mIJLJDBEEAA.
     */
    @java.lang.Override
    public boolean getMIJLJDBEEAA() {
      return mIJLJDBEEAA_;
    }

    public static final int MEET_COND_LIST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList meetCondList_;
    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @return A list containing the meetCondList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getMeetCondListList() {
      return meetCondList_;
    }
    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @return The count of meetCondList.
     */
    public int getMeetCondListCount() {
      return meetCondList_.size();
    }
    /**
     * <code>repeated uint32 meet_cond_list = 2;</code>
     * @param index The index of the element to return.
     * @return The meetCondList at the given index.
     */
    public int getMeetCondList(int index) {
      return meetCondList_.getInt(index);
    }
    private int meetCondListMemoizedSerializedSize = -1;

    public static final int WATCHER_INFO_LIST_FIELD_NUMBER = 3;
    private java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> watcherInfoList_;
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> getWatcherInfoListList() {
      return watcherInfoList_;
    }
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder> 
        getWatcherInfoListOrBuilderList() {
      return watcherInfoList_;
    }
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    @java.lang.Override
    public int getWatcherInfoListCount() {
      return watcherInfoList_.size();
    }
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo getWatcherInfoList(int index) {
      return watcherInfoList_.get(index);
    }
    /**
     * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder getWatcherInfoListOrBuilder(
        int index) {
      return watcherInfoList_.get(index);
    }

    public static final int END_TIME_FIELD_NUMBER = 4;
    private int endTime_;
    /**
     * <code>uint32 end_time = 4;</code>
     * @return The endTime.
     */
    @java.lang.Override
    public int getEndTime() {
      return endTime_;
    }

    public static final int IS_FINISHED_FIELD_NUMBER = 6;
    private boolean isFinished_;
    /**
     * <code>bool is_finished = 6;</code>
     * @return The isFinished.
     */
    @java.lang.Override
    public boolean getIsFinished() {
      return isFinished_;
    }

    public static final int BEGIN_TIME_FIELD_NUMBER = 9;
    private int beginTime_;
    /**
     * <code>uint32 begin_time = 9;</code>
     * @return The beginTime.
     */
    @java.lang.Override
    public int getBeginTime() {
      return beginTime_;
    }

    public static final int IEPMKHMOCNI_FIELD_NUMBER = 10;
    private boolean iEPMKHMOCNI_;
    /**
     * <code>bool IEPMKHMOCNI = 10;</code>
     * @return The iEPMKHMOCNI.
     */
    @java.lang.Override
    public boolean getIEPMKHMOCNI() {
      return iEPMKHMOCNI_;
    }

    public static final int SCHEDULE_ID_FIELD_NUMBER = 11;
    private int scheduleId_;
    /**
     * <code>uint32 schedule_id = 11;</code>
     * @return The scheduleId.
     */
    @java.lang.Override
    public int getScheduleId() {
      return scheduleId_;
    }

    public static final int ACTIVITY_ID_FIELD_NUMBER = 12;
    private int activityId_;
    /**
     * <code>uint32 activity_id = 12;</code>
     * @return The activityId.
     */
    @java.lang.Override
    public int getActivityId() {
      return activityId_;
    }

    public static final int IOFIKNBFOHI_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.IntList iOFIKNBFOHI_;
    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @return A list containing the iOFIKNBFOHI.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIOFIKNBFOHIList() {
      return iOFIKNBFOHI_;
    }
    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @return The count of iOFIKNBFOHI.
     */
    public int getIOFIKNBFOHICount() {
      return iOFIKNBFOHI_.size();
    }
    /**
     * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
     * @param index The index of the element to return.
     * @return The iOFIKNBFOHI at the given index.
     */
    public int getIOFIKNBFOHI(int index) {
      return iOFIKNBFOHI_.getInt(index);
    }
    private int iOFIKNBFOHIMemoizedSerializedSize = -1;

    public static final int ACTIVITY_TYPE_FIELD_NUMBER = 14;
    private int activityType_;
    /**
     * <code>uint32 activity_type = 14;</code>
     * @return The activityType.
     */
    @java.lang.Override
    public int getActivityType() {
      return activityType_;
    }

    public static final int BPAHOJFDILG_FIELD_NUMBER = 31;
    private static final class BPAHOJFDILGDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_BPAHOJFDILGEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> bPAHOJFDILG_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetBPAHOJFDILG() {
      if (bPAHOJFDILG_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BPAHOJFDILGDefaultEntryHolder.defaultEntry);
      }
      return bPAHOJFDILG_;
    }

    public int getBPAHOJFDILGCount() {
      return internalGetBPAHOJFDILG().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */

    @java.lang.Override
    public boolean containsBPAHOJFDILG(
        int key) {
      
      return internalGetBPAHOJFDILG().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBPAHOJFDILGMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getBPAHOJFDILG() {
      return getBPAHOJFDILGMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getBPAHOJFDILGMap() {
      return internalGetBPAHOJFDILG().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    @java.lang.Override

    public int getBPAHOJFDILGOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBPAHOJFDILG().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
     */
    @java.lang.Override

    public int getBPAHOJFDILGOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBPAHOJFDILG().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ACTIVITY_PUSH_TIPS_DATA_LIST_FIELD_NUMBER = 115;
    private java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> activityPushTipsDataList_;
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> getActivityPushTipsDataListList() {
      return activityPushTipsDataList_;
    }
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder> 
        getActivityPushTipsDataListOrBuilderList() {
      return activityPushTipsDataList_;
    }
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    @java.lang.Override
    public int getActivityPushTipsDataListCount() {
      return activityPushTipsDataList_.size();
    }
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData getActivityPushTipsDataList(int index) {
      return activityPushTipsDataList_.get(index);
    }
    /**
     * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder getActivityPushTipsDataListOrBuilder(
        int index) {
      return activityPushTipsDataList_.get(index);
    }

    public static final int CDDJDJIEPPJ_FIELD_NUMBER = 190;
    private boolean cDDJDJIEPPJ_;
    /**
     * <code>bool CDDJDJIEPPJ = 190;</code>
     * @return The cDDJDJIEPPJ.
     */
    @java.lang.Override
    public boolean getCDDJDJIEPPJ() {
      return cDDJDJIEPPJ_;
    }

    public static final int GJBJNMHOGJD_FIELD_NUMBER = 215;
    private long gJBJNMHOGJD_;
    /**
     * <code>uint64 GJBJNMHOGJD = 215;</code>
     * @return The gJBJNMHOGJD.
     */
    @java.lang.Override
    public long getGJBJNMHOGJD() {
      return gJBJNMHOGJD_;
    }

    public static final int NKFKPIGEDPE_FIELD_NUMBER = 370;
    private boolean nKFKPIGEDPE_;
    /**
     * <code>bool NKFKPIGEDPE = 370;</code>
     * @return The nKFKPIGEDPE.
     */
    @java.lang.Override
    public boolean getNKFKPIGEDPE() {
      return nKFKPIGEDPE_;
    }

    public static final int FIRST_DAY_START_TIME_FIELD_NUMBER = 533;
    private int firstDayStartTime_;
    /**
     * <code>uint32 first_day_start_time = 533;</code>
     * @return The firstDayStartTime.
     */
    @java.lang.Override
    public int getFirstDayStartTime() {
      return firstDayStartTime_;
    }

    public static final int NLHLFBLHABL_FIELD_NUMBER = 576;
    private com.google.protobuf.Internal.IntList nLHLFBLHABL_;
    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @return A list containing the nLHLFBLHABL.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getNLHLFBLHABLList() {
      return nLHLFBLHABL_;
    }
    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @return The count of nLHLFBLHABL.
     */
    public int getNLHLFBLHABLCount() {
      return nLHLFBLHABL_.size();
    }
    /**
     * <code>repeated uint32 NLHLFBLHABL = 576;</code>
     * @param index The index of the element to return.
     * @return The nLHLFBLHABL at the given index.
     */
    public int getNLHLFBLHABL(int index) {
      return nLHLFBLHABL_.getInt(index);
    }
    private int nLHLFBLHABLMemoizedSerializedSize = -1;

    public static final int IAFLDHGIHHL_FIELD_NUMBER = 935;
    private boolean iAFLDHGIHHL_;
    /**
     * <code>bool IAFLDHGIHHL = 935;</code>
     * @return The iAFLDHGIHHL.
     */
    @java.lang.Override
    public boolean getIAFLDHGIHHL() {
      return iAFLDHGIHHL_;
    }

    public static final int GECKEENCMOA_FIELD_NUMBER = 1018;
    private com.google.protobuf.Internal.LongList gECKEENCMOA_;
    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @return A list containing the gECKEENCMOA.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getGECKEENCMOAList() {
      return gECKEENCMOA_;
    }
    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @return The count of gECKEENCMOA.
     */
    public int getGECKEENCMOACount() {
      return gECKEENCMOA_.size();
    }
    /**
     * <code>repeated uint64 GECKEENCMOA = 1018;</code>
     * @param index The index of the element to return.
     * @return The gECKEENCMOA at the given index.
     */
    public long getGECKEENCMOA(int index) {
      return gECKEENCMOA_.getLong(index);
    }
    private int gECKEENCMOAMemoizedSerializedSize = -1;

    public static final int IOIPJEMJLPP_FIELD_NUMBER = 1179;
    private int iOIPJEMJLPP_;
    /**
     * <code>uint32 IOIPJEMJLPP = 1179;</code>
     * @return The iOIPJEMJLPP.
     */
    @java.lang.Override
    public int getIOIPJEMJLPP() {
      return iOIPJEMJLPP_;
    }

    public static final int HIGJMLDHFIH_FIELD_NUMBER = 1207;
    private com.google.protobuf.Internal.IntList hIGJMLDHFIH_;
    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @return A list containing the hIGJMLDHFIH.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHIGJMLDHFIHList() {
      return hIGJMLDHFIH_;
    }
    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @return The count of hIGJMLDHFIH.
     */
    public int getHIGJMLDHFIHCount() {
      return hIGJMLDHFIH_.size();
    }
    /**
     * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
     * @param index The index of the element to return.
     * @return The hIGJMLDHFIH at the given index.
     */
    public int getHIGJMLDHFIH(int index) {
      return hIGJMLDHFIH_.getInt(index);
    }
    private int hIGJMLDHFIHMemoizedSerializedSize = -1;

    public static final int CUR_SCORE_FIELD_NUMBER = 1405;
    private int curScore_;
    /**
     * <code>uint32 cur_score = 1405;</code>
     * @return The curScore.
     */
    @java.lang.Override
    public int getCurScore() {
      return curScore_;
    }

    public static final int MFEJOIGPMGL_FIELD_NUMBER = 1521;
    private int mFEJOIGPMGL_;
    /**
     * <code>uint32 MFEJOIGPMGL = 1521;</code>
     * @return The mFEJOIGPMGL.
     */
    @java.lang.Override
    public int getMFEJOIGPMGL() {
      return mFEJOIGPMGL_;
    }

    public static final int NEDGLDBBHJM_FIELD_NUMBER = 1555;
    private boolean nEDGLDBBHJM_;
    /**
     * <code>bool NEDGLDBBHJM = 1555;</code>
     * @return The nEDGLDBBHJM.
     */
    @java.lang.Override
    public boolean getNEDGLDBBHJM() {
      return nEDGLDBBHJM_;
    }

    public static final int ADMOADOKGGH_FIELD_NUMBER = 1707;
    private int aDMOADOKGGH_;
    /**
     * <code>uint32 ADMOADOKGGH = 1707;</code>
     * @return The aDMOADOKGGH.
     */
    @java.lang.Override
    public int getADMOADOKGGH() {
      return aDMOADOKGGH_;
    }

    public static final int LCEEJDLHMLF_FIELD_NUMBER = 1868;
    private static final class LCEEJDLHMLFDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_LCEEJDLHMLFEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> lCEEJDLHMLF_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLCEEJDLHMLF() {
      if (lCEEJDLHMLF_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LCEEJDLHMLFDefaultEntryHolder.defaultEntry);
      }
      return lCEEJDLHMLF_;
    }

    public int getLCEEJDLHMLFCount() {
      return internalGetLCEEJDLHMLF().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */

    @java.lang.Override
    public boolean containsLCEEJDLHMLF(
        int key) {
      
      return internalGetLCEEJDLHMLF().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLCEEJDLHMLFMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLCEEJDLHMLF() {
      return getLCEEJDLHMLFMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLCEEJDLHMLFMap() {
      return internalGetLCEEJDLHMLF().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    @java.lang.Override

    public int getLCEEJDLHMLFOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLCEEJDLHMLF().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
     */
    @java.lang.Override

    public int getLCEEJDLHMLFOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLCEEJDLHMLF().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MUSIC_GAME_INFO_FIELD_NUMBER = 861;
    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     * @return Whether the musicGameInfo field is set.
     */
    @java.lang.Override
    public boolean hasMusicGameInfo() {
      return detailCase_ == 861;
    }
    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     * @return The musicGameInfo.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo getMusicGameInfo() {
      if (detailCase_ == 861) {
         return (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_;
      }
      return emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
    }
    /**
     * <pre>
     *SeaLampActivityDetailInfo sam_lamp_info = 5;
     *SalesmanActivityDetailInfo salesman_info = 7;
     *CrucibleActivityDetailInfo crucible_info = 8;
     *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
     *CoinCollectDetailInfo coin_collect_info = 24;
     *RockBoardExploreDetailInfo rock_board_explore_info = 55;
     *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
     *PotionActivityDetailInfo potion_info = 108;
     *SeaLampActivityInfo sea_lamp_info = 113;
     *MOEGLIENOCL monster_chess_detail_info = 128;
     *NGGOAFPKECJ treasure_hunt_v4_info = 136;
     *FleurFairActivityDetailInfo fleur_fair_info = 165;
     *POBPMCKMGEH animal_view_info = 170;
     *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
     *TreasureMapActivityDetailInfo treasure_map_info = 182;
     *PFNDGPAHAGB filmfest_detail_info = 206;
     *BBMOMAAAMHL gcg_pve_info = 209;
     *MDKEDGEBLLC recharge_disk_detail_info = 217;
     *JNOAHALOBLI ugc_v2_info = 221;
     *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
     *HAPIKKCLOOB natlan_tour_detail_info = 231;
     *IJMMLAHDMDA watergun_info = 273;
     *EMBFCJBLLAD fleur_fair_v2_info = 291;
     *NBBIIELHBDP gcg_pve_puzzle_info = 294;
     *CharAmusementDetailInfo char_amusement_info = 315;
     *OFHNLPONCEO gcg_pve_infinite_info = 323;
     *BlessingActivityDetailInfo blessing_info = 331;
     *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
     *AKGMDFJHONF poetry_festival_detail_info = 382;
     *OBMDDMDLANI fairy_tales_detail_info = 389;
     *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
     *DCNODEDPJBJ ceremony_info = 429;
     *PlantFlowerActivityDetailInfo plant_flower_info = 455;
     *BartenderActivityDetailInfo bartender_info = 485;
     *LEBJNMCBIIF gcg_festival_info = 507;
     *IslandPartyDetailInfo island_party_info = 543;
     *GECCKBCEPAM cooperate_challenge_detail_info = 551;
     *FindHilichurlDetailInfo find_hilichurl_info = 560;
     *IrodoriActivityDetailInfo irodori_info = 563;
     *AHCCKEKPJAL penumbra_adventure_info = 567;
     *BlitzRushActivityDetailInfo blitz_rush_info = 570;
     *DNIHFOEMJKN alchemy_sim_detail_info = 607;
     *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
     *ChessActivityDetailInfo chess_info = 669;
     *GachaActivityDetailInfo gacha_info = 675;
     *PGACPIGEOGC aka_fes_info = 682;
     *KDPMOKFOENA nahida_birth_detail_info = 692;
     *LLKJJELOFLH auto_time_stop_detail_info = 709;
     *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
     *BuoyantCombatDetailInfo buoyant_combat_info = 773;
     *EchoShellDetailInfo echo_shell_info = 776;
     *SumoActivityDetailInfo sumo_info = 783;
     *LDJDMFMBGAP cook_game_detail_info = 788;
     *BIDBLDKLHDM goal_challenge_info = 806;
     *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
     *KCDNNGFNBEB bullet_hell_detail_info = 830;
     *DuelHeartDetailInfo duel_heart_info = 835;
     *InstableSprayDetailInfo instable_spray_info = 851;
     * </pre>
     *
     * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder getMusicGameInfoOrBuilder() {
      if (detailCase_ == 861) {
         return (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_;
      }
      return emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (mIJLJDBEEAA_ != false) {
        output.writeBool(1, mIJLJDBEEAA_);
      }
      if (getMeetCondListList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(meetCondListMemoizedSerializedSize);
      }
      for (int i = 0; i < meetCondList_.size(); i++) {
        output.writeUInt32NoTag(meetCondList_.getInt(i));
      }
      for (int i = 0; i < watcherInfoList_.size(); i++) {
        output.writeMessage(3, watcherInfoList_.get(i));
      }
      if (endTime_ != 0) {
        output.writeUInt32(4, endTime_);
      }
      if (isFinished_ != false) {
        output.writeBool(6, isFinished_);
      }
      if (beginTime_ != 0) {
        output.writeUInt32(9, beginTime_);
      }
      if (iEPMKHMOCNI_ != false) {
        output.writeBool(10, iEPMKHMOCNI_);
      }
      if (scheduleId_ != 0) {
        output.writeUInt32(11, scheduleId_);
      }
      if (activityId_ != 0) {
        output.writeUInt32(12, activityId_);
      }
      if (getIOFIKNBFOHIList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(iOFIKNBFOHIMemoizedSerializedSize);
      }
      for (int i = 0; i < iOFIKNBFOHI_.size(); i++) {
        output.writeUInt32NoTag(iOFIKNBFOHI_.getInt(i));
      }
      if (activityType_ != 0) {
        output.writeUInt32(14, activityType_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBPAHOJFDILG(),
          BPAHOJFDILGDefaultEntryHolder.defaultEntry,
          31);
      for (int i = 0; i < activityPushTipsDataList_.size(); i++) {
        output.writeMessage(115, activityPushTipsDataList_.get(i));
      }
      if (cDDJDJIEPPJ_ != false) {
        output.writeBool(190, cDDJDJIEPPJ_);
      }
      if (gJBJNMHOGJD_ != 0L) {
        output.writeUInt64(215, gJBJNMHOGJD_);
      }
      if (nKFKPIGEDPE_ != false) {
        output.writeBool(370, nKFKPIGEDPE_);
      }
      if (firstDayStartTime_ != 0) {
        output.writeUInt32(533, firstDayStartTime_);
      }
      if (getNLHLFBLHABLList().size() > 0) {
        output.writeUInt32NoTag(4610);
        output.writeUInt32NoTag(nLHLFBLHABLMemoizedSerializedSize);
      }
      for (int i = 0; i < nLHLFBLHABL_.size(); i++) {
        output.writeUInt32NoTag(nLHLFBLHABL_.getInt(i));
      }
      if (detailCase_ == 861) {
        output.writeMessage(861, (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_);
      }
      if (iAFLDHGIHHL_ != false) {
        output.writeBool(935, iAFLDHGIHHL_);
      }
      if (getGECKEENCMOAList().size() > 0) {
        output.writeUInt32NoTag(8146);
        output.writeUInt32NoTag(gECKEENCMOAMemoizedSerializedSize);
      }
      for (int i = 0; i < gECKEENCMOA_.size(); i++) {
        output.writeUInt64NoTag(gECKEENCMOA_.getLong(i));
      }
      if (iOIPJEMJLPP_ != 0) {
        output.writeUInt32(1179, iOIPJEMJLPP_);
      }
      if (getHIGJMLDHFIHList().size() > 0) {
        output.writeUInt32NoTag(9658);
        output.writeUInt32NoTag(hIGJMLDHFIHMemoizedSerializedSize);
      }
      for (int i = 0; i < hIGJMLDHFIH_.size(); i++) {
        output.writeUInt32NoTag(hIGJMLDHFIH_.getInt(i));
      }
      if (curScore_ != 0) {
        output.writeUInt32(1405, curScore_);
      }
      if (mFEJOIGPMGL_ != 0) {
        output.writeUInt32(1521, mFEJOIGPMGL_);
      }
      if (nEDGLDBBHJM_ != false) {
        output.writeBool(1555, nEDGLDBBHJM_);
      }
      if (aDMOADOKGGH_ != 0) {
        output.writeUInt32(1707, aDMOADOKGGH_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLCEEJDLHMLF(),
          LCEEJDLHMLFDefaultEntryHolder.defaultEntry,
          1868);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mIJLJDBEEAA_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, mIJLJDBEEAA_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < meetCondList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(meetCondList_.getInt(i));
        }
        size += dataSize;
        if (!getMeetCondListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        meetCondListMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < watcherInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, watcherInfoList_.get(i));
      }
      if (endTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, endTime_);
      }
      if (isFinished_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isFinished_);
      }
      if (beginTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, beginTime_);
      }
      if (iEPMKHMOCNI_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, iEPMKHMOCNI_);
      }
      if (scheduleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, scheduleId_);
      }
      if (activityId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, activityId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < iOFIKNBFOHI_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(iOFIKNBFOHI_.getInt(i));
        }
        size += dataSize;
        if (!getIOFIKNBFOHIList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        iOFIKNBFOHIMemoizedSerializedSize = dataSize;
      }
      if (activityType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, activityType_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetBPAHOJFDILG().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        bPAHOJFDILG__ = BPAHOJFDILGDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(31, bPAHOJFDILG__);
      }
      for (int i = 0; i < activityPushTipsDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(115, activityPushTipsDataList_.get(i));
      }
      if (cDDJDJIEPPJ_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(190, cDDJDJIEPPJ_);
      }
      if (gJBJNMHOGJD_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(215, gJBJNMHOGJD_);
      }
      if (nKFKPIGEDPE_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(370, nKFKPIGEDPE_);
      }
      if (firstDayStartTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(533, firstDayStartTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nLHLFBLHABL_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(nLHLFBLHABL_.getInt(i));
        }
        size += dataSize;
        if (!getNLHLFBLHABLList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nLHLFBLHABLMemoizedSerializedSize = dataSize;
      }
      if (detailCase_ == 861) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(861, (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_);
      }
      if (iAFLDHGIHHL_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(935, iAFLDHGIHHL_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gECKEENCMOA_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(gECKEENCMOA_.getLong(i));
        }
        size += dataSize;
        if (!getGECKEENCMOAList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        gECKEENCMOAMemoizedSerializedSize = dataSize;
      }
      if (iOIPJEMJLPP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1179, iOIPJEMJLPP_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hIGJMLDHFIH_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hIGJMLDHFIH_.getInt(i));
        }
        size += dataSize;
        if (!getHIGJMLDHFIHList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        hIGJMLDHFIHMemoizedSerializedSize = dataSize;
      }
      if (curScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1405, curScore_);
      }
      if (mFEJOIGPMGL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1521, mFEJOIGPMGL_);
      }
      if (nEDGLDBBHJM_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1555, nEDGLDBBHJM_);
      }
      if (aDMOADOKGGH_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1707, aDMOADOKGGH_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLCEEJDLHMLF().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        lCEEJDLHMLF__ = LCEEJDLHMLFDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1868, lCEEJDLHMLF__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo other = (emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo) obj;

      if (getMIJLJDBEEAA()
          != other.getMIJLJDBEEAA()) return false;
      if (!getMeetCondListList()
          .equals(other.getMeetCondListList())) return false;
      if (!getWatcherInfoListList()
          .equals(other.getWatcherInfoListList())) return false;
      if (getEndTime()
          != other.getEndTime()) return false;
      if (getIsFinished()
          != other.getIsFinished()) return false;
      if (getBeginTime()
          != other.getBeginTime()) return false;
      if (getIEPMKHMOCNI()
          != other.getIEPMKHMOCNI()) return false;
      if (getScheduleId()
          != other.getScheduleId()) return false;
      if (getActivityId()
          != other.getActivityId()) return false;
      if (!getIOFIKNBFOHIList()
          .equals(other.getIOFIKNBFOHIList())) return false;
      if (getActivityType()
          != other.getActivityType()) return false;
      if (!internalGetBPAHOJFDILG().equals(
          other.internalGetBPAHOJFDILG())) return false;
      if (!getActivityPushTipsDataListList()
          .equals(other.getActivityPushTipsDataListList())) return false;
      if (getCDDJDJIEPPJ()
          != other.getCDDJDJIEPPJ()) return false;
      if (getGJBJNMHOGJD()
          != other.getGJBJNMHOGJD()) return false;
      if (getNKFKPIGEDPE()
          != other.getNKFKPIGEDPE()) return false;
      if (getFirstDayStartTime()
          != other.getFirstDayStartTime()) return false;
      if (!getNLHLFBLHABLList()
          .equals(other.getNLHLFBLHABLList())) return false;
      if (getIAFLDHGIHHL()
          != other.getIAFLDHGIHHL()) return false;
      if (!getGECKEENCMOAList()
          .equals(other.getGECKEENCMOAList())) return false;
      if (getIOIPJEMJLPP()
          != other.getIOIPJEMJLPP()) return false;
      if (!getHIGJMLDHFIHList()
          .equals(other.getHIGJMLDHFIHList())) return false;
      if (getCurScore()
          != other.getCurScore()) return false;
      if (getMFEJOIGPMGL()
          != other.getMFEJOIGPMGL()) return false;
      if (getNEDGLDBBHJM()
          != other.getNEDGLDBBHJM()) return false;
      if (getADMOADOKGGH()
          != other.getADMOADOKGGH()) return false;
      if (!internalGetLCEEJDLHMLF().equals(
          other.internalGetLCEEJDLHMLF())) return false;
      if (!getDetailCase().equals(other.getDetailCase())) return false;
      switch (detailCase_) {
        case 861:
          if (!getMusicGameInfo()
              .equals(other.getMusicGameInfo())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MIJLJDBEEAA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMIJLJDBEEAA());
      if (getMeetCondListCount() > 0) {
        hash = (37 * hash) + MEET_COND_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getMeetCondListList().hashCode();
      }
      if (getWatcherInfoListCount() > 0) {
        hash = (37 * hash) + WATCHER_INFO_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getWatcherInfoListList().hashCode();
      }
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime();
      hash = (37 * hash) + IS_FINISHED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFinished());
      hash = (37 * hash) + BEGIN_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBeginTime();
      hash = (37 * hash) + IEPMKHMOCNI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIEPMKHMOCNI());
      hash = (37 * hash) + SCHEDULE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getScheduleId();
      hash = (37 * hash) + ACTIVITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getActivityId();
      if (getIOFIKNBFOHICount() > 0) {
        hash = (37 * hash) + IOFIKNBFOHI_FIELD_NUMBER;
        hash = (53 * hash) + getIOFIKNBFOHIList().hashCode();
      }
      hash = (37 * hash) + ACTIVITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getActivityType();
      if (!internalGetBPAHOJFDILG().getMap().isEmpty()) {
        hash = (37 * hash) + BPAHOJFDILG_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBPAHOJFDILG().hashCode();
      }
      if (getActivityPushTipsDataListCount() > 0) {
        hash = (37 * hash) + ACTIVITY_PUSH_TIPS_DATA_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getActivityPushTipsDataListList().hashCode();
      }
      hash = (37 * hash) + CDDJDJIEPPJ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCDDJDJIEPPJ());
      hash = (37 * hash) + GJBJNMHOGJD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGJBJNMHOGJD());
      hash = (37 * hash) + NKFKPIGEDPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNKFKPIGEDPE());
      hash = (37 * hash) + FIRST_DAY_START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getFirstDayStartTime();
      if (getNLHLFBLHABLCount() > 0) {
        hash = (37 * hash) + NLHLFBLHABL_FIELD_NUMBER;
        hash = (53 * hash) + getNLHLFBLHABLList().hashCode();
      }
      hash = (37 * hash) + IAFLDHGIHHL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIAFLDHGIHHL());
      if (getGECKEENCMOACount() > 0) {
        hash = (37 * hash) + GECKEENCMOA_FIELD_NUMBER;
        hash = (53 * hash) + getGECKEENCMOAList().hashCode();
      }
      hash = (37 * hash) + IOIPJEMJLPP_FIELD_NUMBER;
      hash = (53 * hash) + getIOIPJEMJLPP();
      if (getHIGJMLDHFIHCount() > 0) {
        hash = (37 * hash) + HIGJMLDHFIH_FIELD_NUMBER;
        hash = (53 * hash) + getHIGJMLDHFIHList().hashCode();
      }
      hash = (37 * hash) + CUR_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getCurScore();
      hash = (37 * hash) + MFEJOIGPMGL_FIELD_NUMBER;
      hash = (53 * hash) + getMFEJOIGPMGL();
      hash = (37 * hash) + NEDGLDBBHJM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNEDGLDBBHJM());
      hash = (37 * hash) + ADMOADOKGGH_FIELD_NUMBER;
      hash = (53 * hash) + getADMOADOKGGH();
      if (!internalGetLCEEJDLHMLF().getMap().isEmpty()) {
        hash = (37 * hash) + LCEEJDLHMLF_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLCEEJDLHMLF().hashCode();
      }
      switch (detailCase_) {
        case 861:
          hash = (37 * hash) + MUSIC_GAME_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getMusicGameInfo().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ActivityInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ActivityInfo)
        emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 31:
            return internalGetBPAHOJFDILG();
          case 1868:
            return internalGetLCEEJDLHMLF();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 31:
            return internalGetMutableBPAHOJFDILG();
          case 1868:
            return internalGetMutableLCEEJDLHMLF();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.class, emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWatcherInfoListFieldBuilder();
          getActivityPushTipsDataListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mIJLJDBEEAA_ = false;

        meetCondList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (watcherInfoListBuilder_ == null) {
          watcherInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          watcherInfoListBuilder_.clear();
        }
        endTime_ = 0;

        isFinished_ = false;

        beginTime_ = 0;

        iEPMKHMOCNI_ = false;

        scheduleId_ = 0;

        activityId_ = 0;

        iOFIKNBFOHI_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        activityType_ = 0;

        internalGetMutableBPAHOJFDILG().clear();
        if (activityPushTipsDataListBuilder_ == null) {
          activityPushTipsDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          activityPushTipsDataListBuilder_.clear();
        }
        cDDJDJIEPPJ_ = false;

        gJBJNMHOGJD_ = 0L;

        nKFKPIGEDPE_ = false;

        firstDayStartTime_ = 0;

        nLHLFBLHABL_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        iAFLDHGIHHL_ = false;

        gECKEENCMOA_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000040);
        iOIPJEMJLPP_ = 0;

        hIGJMLDHFIH_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        curScore_ = 0;

        mFEJOIGPMGL_ = 0;

        nEDGLDBBHJM_ = false;

        aDMOADOKGGH_ = 0;

        internalGetMutableLCEEJDLHMLF().clear();
        detailCase_ = 0;
        detail_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.ActivityInfoOuterClass.internal_static_ActivityInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo build() {
        emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo buildPartial() {
        emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo result = new emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo(this);
        int from_bitField0_ = bitField0_;
        result.mIJLJDBEEAA_ = mIJLJDBEEAA_;
        if (((bitField0_ & 0x00000001) != 0)) {
          meetCondList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.meetCondList_ = meetCondList_;
        if (watcherInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            watcherInfoList_ = java.util.Collections.unmodifiableList(watcherInfoList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.watcherInfoList_ = watcherInfoList_;
        } else {
          result.watcherInfoList_ = watcherInfoListBuilder_.build();
        }
        result.endTime_ = endTime_;
        result.isFinished_ = isFinished_;
        result.beginTime_ = beginTime_;
        result.iEPMKHMOCNI_ = iEPMKHMOCNI_;
        result.scheduleId_ = scheduleId_;
        result.activityId_ = activityId_;
        if (((bitField0_ & 0x00000004) != 0)) {
          iOFIKNBFOHI_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.iOFIKNBFOHI_ = iOFIKNBFOHI_;
        result.activityType_ = activityType_;
        result.bPAHOJFDILG_ = internalGetBPAHOJFDILG();
        result.bPAHOJFDILG_.makeImmutable();
        if (activityPushTipsDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            activityPushTipsDataList_ = java.util.Collections.unmodifiableList(activityPushTipsDataList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.activityPushTipsDataList_ = activityPushTipsDataList_;
        } else {
          result.activityPushTipsDataList_ = activityPushTipsDataListBuilder_.build();
        }
        result.cDDJDJIEPPJ_ = cDDJDJIEPPJ_;
        result.gJBJNMHOGJD_ = gJBJNMHOGJD_;
        result.nKFKPIGEDPE_ = nKFKPIGEDPE_;
        result.firstDayStartTime_ = firstDayStartTime_;
        if (((bitField0_ & 0x00000020) != 0)) {
          nLHLFBLHABL_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.nLHLFBLHABL_ = nLHLFBLHABL_;
        result.iAFLDHGIHHL_ = iAFLDHGIHHL_;
        if (((bitField0_ & 0x00000040) != 0)) {
          gECKEENCMOA_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.gECKEENCMOA_ = gECKEENCMOA_;
        result.iOIPJEMJLPP_ = iOIPJEMJLPP_;
        if (((bitField0_ & 0x00000080) != 0)) {
          hIGJMLDHFIH_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.hIGJMLDHFIH_ = hIGJMLDHFIH_;
        result.curScore_ = curScore_;
        result.mFEJOIGPMGL_ = mFEJOIGPMGL_;
        result.nEDGLDBBHJM_ = nEDGLDBBHJM_;
        result.aDMOADOKGGH_ = aDMOADOKGGH_;
        result.lCEEJDLHMLF_ = internalGetLCEEJDLHMLF();
        result.lCEEJDLHMLF_.makeImmutable();
        if (detailCase_ == 861) {
          if (musicGameInfoBuilder_ == null) {
            result.detail_ = detail_;
          } else {
            result.detail_ = musicGameInfoBuilder_.build();
          }
        }
        result.detailCase_ = detailCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo) {
          return mergeFrom((emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo other) {
        if (other == emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo.getDefaultInstance()) return this;
        if (other.getMIJLJDBEEAA() != false) {
          setMIJLJDBEEAA(other.getMIJLJDBEEAA());
        }
        if (!other.meetCondList_.isEmpty()) {
          if (meetCondList_.isEmpty()) {
            meetCondList_ = other.meetCondList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMeetCondListIsMutable();
            meetCondList_.addAll(other.meetCondList_);
          }
          onChanged();
        }
        if (watcherInfoListBuilder_ == null) {
          if (!other.watcherInfoList_.isEmpty()) {
            if (watcherInfoList_.isEmpty()) {
              watcherInfoList_ = other.watcherInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWatcherInfoListIsMutable();
              watcherInfoList_.addAll(other.watcherInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.watcherInfoList_.isEmpty()) {
            if (watcherInfoListBuilder_.isEmpty()) {
              watcherInfoListBuilder_.dispose();
              watcherInfoListBuilder_ = null;
              watcherInfoList_ = other.watcherInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              watcherInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWatcherInfoListFieldBuilder() : null;
            } else {
              watcherInfoListBuilder_.addAllMessages(other.watcherInfoList_);
            }
          }
        }
        if (other.getEndTime() != 0) {
          setEndTime(other.getEndTime());
        }
        if (other.getIsFinished() != false) {
          setIsFinished(other.getIsFinished());
        }
        if (other.getBeginTime() != 0) {
          setBeginTime(other.getBeginTime());
        }
        if (other.getIEPMKHMOCNI() != false) {
          setIEPMKHMOCNI(other.getIEPMKHMOCNI());
        }
        if (other.getScheduleId() != 0) {
          setScheduleId(other.getScheduleId());
        }
        if (other.getActivityId() != 0) {
          setActivityId(other.getActivityId());
        }
        if (!other.iOFIKNBFOHI_.isEmpty()) {
          if (iOFIKNBFOHI_.isEmpty()) {
            iOFIKNBFOHI_ = other.iOFIKNBFOHI_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureIOFIKNBFOHIIsMutable();
            iOFIKNBFOHI_.addAll(other.iOFIKNBFOHI_);
          }
          onChanged();
        }
        if (other.getActivityType() != 0) {
          setActivityType(other.getActivityType());
        }
        internalGetMutableBPAHOJFDILG().mergeFrom(
            other.internalGetBPAHOJFDILG());
        if (activityPushTipsDataListBuilder_ == null) {
          if (!other.activityPushTipsDataList_.isEmpty()) {
            if (activityPushTipsDataList_.isEmpty()) {
              activityPushTipsDataList_ = other.activityPushTipsDataList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureActivityPushTipsDataListIsMutable();
              activityPushTipsDataList_.addAll(other.activityPushTipsDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.activityPushTipsDataList_.isEmpty()) {
            if (activityPushTipsDataListBuilder_.isEmpty()) {
              activityPushTipsDataListBuilder_.dispose();
              activityPushTipsDataListBuilder_ = null;
              activityPushTipsDataList_ = other.activityPushTipsDataList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              activityPushTipsDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActivityPushTipsDataListFieldBuilder() : null;
            } else {
              activityPushTipsDataListBuilder_.addAllMessages(other.activityPushTipsDataList_);
            }
          }
        }
        if (other.getCDDJDJIEPPJ() != false) {
          setCDDJDJIEPPJ(other.getCDDJDJIEPPJ());
        }
        if (other.getGJBJNMHOGJD() != 0L) {
          setGJBJNMHOGJD(other.getGJBJNMHOGJD());
        }
        if (other.getNKFKPIGEDPE() != false) {
          setNKFKPIGEDPE(other.getNKFKPIGEDPE());
        }
        if (other.getFirstDayStartTime() != 0) {
          setFirstDayStartTime(other.getFirstDayStartTime());
        }
        if (!other.nLHLFBLHABL_.isEmpty()) {
          if (nLHLFBLHABL_.isEmpty()) {
            nLHLFBLHABL_ = other.nLHLFBLHABL_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureNLHLFBLHABLIsMutable();
            nLHLFBLHABL_.addAll(other.nLHLFBLHABL_);
          }
          onChanged();
        }
        if (other.getIAFLDHGIHHL() != false) {
          setIAFLDHGIHHL(other.getIAFLDHGIHHL());
        }
        if (!other.gECKEENCMOA_.isEmpty()) {
          if (gECKEENCMOA_.isEmpty()) {
            gECKEENCMOA_ = other.gECKEENCMOA_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureGECKEENCMOAIsMutable();
            gECKEENCMOA_.addAll(other.gECKEENCMOA_);
          }
          onChanged();
        }
        if (other.getIOIPJEMJLPP() != 0) {
          setIOIPJEMJLPP(other.getIOIPJEMJLPP());
        }
        if (!other.hIGJMLDHFIH_.isEmpty()) {
          if (hIGJMLDHFIH_.isEmpty()) {
            hIGJMLDHFIH_ = other.hIGJMLDHFIH_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureHIGJMLDHFIHIsMutable();
            hIGJMLDHFIH_.addAll(other.hIGJMLDHFIH_);
          }
          onChanged();
        }
        if (other.getCurScore() != 0) {
          setCurScore(other.getCurScore());
        }
        if (other.getMFEJOIGPMGL() != 0) {
          setMFEJOIGPMGL(other.getMFEJOIGPMGL());
        }
        if (other.getNEDGLDBBHJM() != false) {
          setNEDGLDBBHJM(other.getNEDGLDBBHJM());
        }
        if (other.getADMOADOKGGH() != 0) {
          setADMOADOKGGH(other.getADMOADOKGGH());
        }
        internalGetMutableLCEEJDLHMLF().mergeFrom(
            other.internalGetLCEEJDLHMLF());
        switch (other.getDetailCase()) {
          case MUSIC_GAME_INFO: {
            mergeMusicGameInfo(other.getMusicGameInfo());
            break;
          }
          case DETAIL_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int detailCase_ = 0;
      private java.lang.Object detail_;
      public DetailCase
          getDetailCase() {
        return DetailCase.forNumber(
            detailCase_);
      }

      public Builder clearDetail() {
        detailCase_ = 0;
        detail_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private boolean mIJLJDBEEAA_ ;
      /**
       * <code>bool MIJLJDBEEAA = 1;</code>
       * @return The mIJLJDBEEAA.
       */
      @java.lang.Override
      public boolean getMIJLJDBEEAA() {
        return mIJLJDBEEAA_;
      }
      /**
       * <code>bool MIJLJDBEEAA = 1;</code>
       * @param value The mIJLJDBEEAA to set.
       * @return This builder for chaining.
       */
      public Builder setMIJLJDBEEAA(boolean value) {
        
        mIJLJDBEEAA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool MIJLJDBEEAA = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMIJLJDBEEAA() {
        
        mIJLJDBEEAA_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList meetCondList_ = emptyIntList();
      private void ensureMeetCondListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          meetCondList_ = mutableCopy(meetCondList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @return A list containing the meetCondList.
       */
      public java.util.List<java.lang.Integer>
          getMeetCondListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(meetCondList_) : meetCondList_;
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @return The count of meetCondList.
       */
      public int getMeetCondListCount() {
        return meetCondList_.size();
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @param index The index of the element to return.
       * @return The meetCondList at the given index.
       */
      public int getMeetCondList(int index) {
        return meetCondList_.getInt(index);
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @param index The index to set the value at.
       * @param value The meetCondList to set.
       * @return This builder for chaining.
       */
      public Builder setMeetCondList(
          int index, int value) {
        ensureMeetCondListIsMutable();
        meetCondList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @param value The meetCondList to add.
       * @return This builder for chaining.
       */
      public Builder addMeetCondList(int value) {
        ensureMeetCondListIsMutable();
        meetCondList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @param values The meetCondList to add.
       * @return This builder for chaining.
       */
      public Builder addAllMeetCondList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMeetCondListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, meetCondList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 meet_cond_list = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeetCondList() {
        meetCondList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> watcherInfoList_ =
        java.util.Collections.emptyList();
      private void ensureWatcherInfoListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          watcherInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo>(watcherInfoList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder> watcherInfoListBuilder_;

      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> getWatcherInfoListList() {
        if (watcherInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(watcherInfoList_);
        } else {
          return watcherInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public int getWatcherInfoListCount() {
        if (watcherInfoListBuilder_ == null) {
          return watcherInfoList_.size();
        } else {
          return watcherInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo getWatcherInfoList(int index) {
        if (watcherInfoListBuilder_ == null) {
          return watcherInfoList_.get(index);
        } else {
          return watcherInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder setWatcherInfoList(
          int index, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo value) {
        if (watcherInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.set(index, value);
          onChanged();
        } else {
          watcherInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder setWatcherInfoList(
          int index, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder builderForValue) {
        if (watcherInfoListBuilder_ == null) {
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          watcherInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder addWatcherInfoList(emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo value) {
        if (watcherInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.add(value);
          onChanged();
        } else {
          watcherInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder addWatcherInfoList(
          int index, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo value) {
        if (watcherInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.add(index, value);
          onChanged();
        } else {
          watcherInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder addWatcherInfoList(
          emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder builderForValue) {
        if (watcherInfoListBuilder_ == null) {
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          watcherInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder addWatcherInfoList(
          int index, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder builderForValue) {
        if (watcherInfoListBuilder_ == null) {
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          watcherInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder addAllWatcherInfoList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo> values) {
        if (watcherInfoListBuilder_ == null) {
          ensureWatcherInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, watcherInfoList_);
          onChanged();
        } else {
          watcherInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder clearWatcherInfoList() {
        if (watcherInfoListBuilder_ == null) {
          watcherInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          watcherInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public Builder removeWatcherInfoList(int index) {
        if (watcherInfoListBuilder_ == null) {
          ensureWatcherInfoListIsMutable();
          watcherInfoList_.remove(index);
          onChanged();
        } else {
          watcherInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder getWatcherInfoListBuilder(
          int index) {
        return getWatcherInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder getWatcherInfoListOrBuilder(
          int index) {
        if (watcherInfoListBuilder_ == null) {
          return watcherInfoList_.get(index);  } else {
          return watcherInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder> 
           getWatcherInfoListOrBuilderList() {
        if (watcherInfoListBuilder_ != null) {
          return watcherInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(watcherInfoList_);
        }
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder addWatcherInfoListBuilder() {
        return getWatcherInfoListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder addWatcherInfoListBuilder(
          int index) {
        return getWatcherInfoListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityWatcherInfo watcher_info_list = 3;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder> 
           getWatcherInfoListBuilderList() {
        return getWatcherInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder> 
          getWatcherInfoListFieldBuilder() {
        if (watcherInfoListBuilder_ == null) {
          watcherInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfo.Builder, emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.ActivityWatcherInfoOrBuilder>(
                  watcherInfoList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          watcherInfoList_ = null;
        }
        return watcherInfoListBuilder_;
      }

      private int endTime_ ;
      /**
       * <code>uint32 end_time = 4;</code>
       * @return The endTime.
       */
      @java.lang.Override
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>uint32 end_time = 4;</code>
       * @param value The endTime to set.
       * @return This builder for chaining.
       */
      public Builder setEndTime(int value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 end_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTime() {
        
        endTime_ = 0;
        onChanged();
        return this;
      }

      private boolean isFinished_ ;
      /**
       * <code>bool is_finished = 6;</code>
       * @return The isFinished.
       */
      @java.lang.Override
      public boolean getIsFinished() {
        return isFinished_;
      }
      /**
       * <code>bool is_finished = 6;</code>
       * @param value The isFinished to set.
       * @return This builder for chaining.
       */
      public Builder setIsFinished(boolean value) {
        
        isFinished_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_finished = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFinished() {
        
        isFinished_ = false;
        onChanged();
        return this;
      }

      private int beginTime_ ;
      /**
       * <code>uint32 begin_time = 9;</code>
       * @return The beginTime.
       */
      @java.lang.Override
      public int getBeginTime() {
        return beginTime_;
      }
      /**
       * <code>uint32 begin_time = 9;</code>
       * @param value The beginTime to set.
       * @return This builder for chaining.
       */
      public Builder setBeginTime(int value) {
        
        beginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 begin_time = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeginTime() {
        
        beginTime_ = 0;
        onChanged();
        return this;
      }

      private boolean iEPMKHMOCNI_ ;
      /**
       * <code>bool IEPMKHMOCNI = 10;</code>
       * @return The iEPMKHMOCNI.
       */
      @java.lang.Override
      public boolean getIEPMKHMOCNI() {
        return iEPMKHMOCNI_;
      }
      /**
       * <code>bool IEPMKHMOCNI = 10;</code>
       * @param value The iEPMKHMOCNI to set.
       * @return This builder for chaining.
       */
      public Builder setIEPMKHMOCNI(boolean value) {
        
        iEPMKHMOCNI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool IEPMKHMOCNI = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIEPMKHMOCNI() {
        
        iEPMKHMOCNI_ = false;
        onChanged();
        return this;
      }

      private int scheduleId_ ;
      /**
       * <code>uint32 schedule_id = 11;</code>
       * @return The scheduleId.
       */
      @java.lang.Override
      public int getScheduleId() {
        return scheduleId_;
      }
      /**
       * <code>uint32 schedule_id = 11;</code>
       * @param value The scheduleId to set.
       * @return This builder for chaining.
       */
      public Builder setScheduleId(int value) {
        
        scheduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 schedule_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearScheduleId() {
        
        scheduleId_ = 0;
        onChanged();
        return this;
      }

      private int activityId_ ;
      /**
       * <code>uint32 activity_id = 12;</code>
       * @return The activityId.
       */
      @java.lang.Override
      public int getActivityId() {
        return activityId_;
      }
      /**
       * <code>uint32 activity_id = 12;</code>
       * @param value The activityId to set.
       * @return This builder for chaining.
       */
      public Builder setActivityId(int value) {
        
        activityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 activity_id = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityId() {
        
        activityId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList iOFIKNBFOHI_ = emptyIntList();
      private void ensureIOFIKNBFOHIIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          iOFIKNBFOHI_ = mutableCopy(iOFIKNBFOHI_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @return A list containing the iOFIKNBFOHI.
       */
      public java.util.List<java.lang.Integer>
          getIOFIKNBFOHIList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(iOFIKNBFOHI_) : iOFIKNBFOHI_;
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @return The count of iOFIKNBFOHI.
       */
      public int getIOFIKNBFOHICount() {
        return iOFIKNBFOHI_.size();
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @param index The index of the element to return.
       * @return The iOFIKNBFOHI at the given index.
       */
      public int getIOFIKNBFOHI(int index) {
        return iOFIKNBFOHI_.getInt(index);
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @param index The index to set the value at.
       * @param value The iOFIKNBFOHI to set.
       * @return This builder for chaining.
       */
      public Builder setIOFIKNBFOHI(
          int index, int value) {
        ensureIOFIKNBFOHIIsMutable();
        iOFIKNBFOHI_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @param value The iOFIKNBFOHI to add.
       * @return This builder for chaining.
       */
      public Builder addIOFIKNBFOHI(int value) {
        ensureIOFIKNBFOHIIsMutable();
        iOFIKNBFOHI_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @param values The iOFIKNBFOHI to add.
       * @return This builder for chaining.
       */
      public Builder addAllIOFIKNBFOHI(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIOFIKNBFOHIIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, iOFIKNBFOHI_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 IOFIKNBFOHI = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearIOFIKNBFOHI() {
        iOFIKNBFOHI_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int activityType_ ;
      /**
       * <code>uint32 activity_type = 14;</code>
       * @return The activityType.
       */
      @java.lang.Override
      public int getActivityType() {
        return activityType_;
      }
      /**
       * <code>uint32 activity_type = 14;</code>
       * @param value The activityType to set.
       * @return This builder for chaining.
       */
      public Builder setActivityType(int value) {
        
        activityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 activity_type = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityType() {
        
        activityType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> bPAHOJFDILG_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetBPAHOJFDILG() {
        if (bPAHOJFDILG_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BPAHOJFDILGDefaultEntryHolder.defaultEntry);
        }
        return bPAHOJFDILG_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableBPAHOJFDILG() {
        onChanged();;
        if (bPAHOJFDILG_ == null) {
          bPAHOJFDILG_ = com.google.protobuf.MapField.newMapField(
              BPAHOJFDILGDefaultEntryHolder.defaultEntry);
        }
        if (!bPAHOJFDILG_.isMutable()) {
          bPAHOJFDILG_ = bPAHOJFDILG_.copy();
        }
        return bPAHOJFDILG_;
      }

      public int getBPAHOJFDILGCount() {
        return internalGetBPAHOJFDILG().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */

      @java.lang.Override
      public boolean containsBPAHOJFDILG(
          int key) {
        
        return internalGetBPAHOJFDILG().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBPAHOJFDILGMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getBPAHOJFDILG() {
        return getBPAHOJFDILGMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getBPAHOJFDILGMap() {
        return internalGetBPAHOJFDILG().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */
      @java.lang.Override

      public int getBPAHOJFDILGOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBPAHOJFDILG().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */
      @java.lang.Override

      public int getBPAHOJFDILGOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBPAHOJFDILG().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBPAHOJFDILG() {
        internalGetMutableBPAHOJFDILG().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */

      public Builder removeBPAHOJFDILG(
          int key) {
        
        internalGetMutableBPAHOJFDILG().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableBPAHOJFDILG() {
        return internalGetMutableBPAHOJFDILG().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */
      public Builder putBPAHOJFDILG(
          int key,
          int value) {
        
        
        internalGetMutableBPAHOJFDILG().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; BPAHOJFDILG = 31;</code>
       */

      public Builder putAllBPAHOJFDILG(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableBPAHOJFDILG().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> activityPushTipsDataList_ =
        java.util.Collections.emptyList();
      private void ensureActivityPushTipsDataListIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          activityPushTipsDataList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData>(activityPushTipsDataList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder> activityPushTipsDataListBuilder_;

      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> getActivityPushTipsDataListList() {
        if (activityPushTipsDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(activityPushTipsDataList_);
        } else {
          return activityPushTipsDataListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public int getActivityPushTipsDataListCount() {
        if (activityPushTipsDataListBuilder_ == null) {
          return activityPushTipsDataList_.size();
        } else {
          return activityPushTipsDataListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData getActivityPushTipsDataList(int index) {
        if (activityPushTipsDataListBuilder_ == null) {
          return activityPushTipsDataList_.get(index);
        } else {
          return activityPushTipsDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder setActivityPushTipsDataList(
          int index, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData value) {
        if (activityPushTipsDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.set(index, value);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder setActivityPushTipsDataList(
          int index, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder builderForValue) {
        if (activityPushTipsDataListBuilder_ == null) {
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder addActivityPushTipsDataList(emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData value) {
        if (activityPushTipsDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.add(value);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder addActivityPushTipsDataList(
          int index, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData value) {
        if (activityPushTipsDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.add(index, value);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder addActivityPushTipsDataList(
          emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder builderForValue) {
        if (activityPushTipsDataListBuilder_ == null) {
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.add(builderForValue.build());
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder addActivityPushTipsDataList(
          int index, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder builderForValue) {
        if (activityPushTipsDataListBuilder_ == null) {
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder addAllActivityPushTipsDataList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData> values) {
        if (activityPushTipsDataListBuilder_ == null) {
          ensureActivityPushTipsDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, activityPushTipsDataList_);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder clearActivityPushTipsDataList() {
        if (activityPushTipsDataListBuilder_ == null) {
          activityPushTipsDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public Builder removeActivityPushTipsDataList(int index) {
        if (activityPushTipsDataListBuilder_ == null) {
          ensureActivityPushTipsDataListIsMutable();
          activityPushTipsDataList_.remove(index);
          onChanged();
        } else {
          activityPushTipsDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder getActivityPushTipsDataListBuilder(
          int index) {
        return getActivityPushTipsDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder getActivityPushTipsDataListOrBuilder(
          int index) {
        if (activityPushTipsDataListBuilder_ == null) {
          return activityPushTipsDataList_.get(index);  } else {
          return activityPushTipsDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder> 
           getActivityPushTipsDataListOrBuilderList() {
        if (activityPushTipsDataListBuilder_ != null) {
          return activityPushTipsDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(activityPushTipsDataList_);
        }
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder addActivityPushTipsDataListBuilder() {
        return getActivityPushTipsDataListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder addActivityPushTipsDataListBuilder(
          int index) {
        return getActivityPushTipsDataListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.getDefaultInstance());
      }
      /**
       * <code>repeated .ActivityPushTipsData activity_push_tips_data_list = 115;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder> 
           getActivityPushTipsDataListBuilderList() {
        return getActivityPushTipsDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder> 
          getActivityPushTipsDataListFieldBuilder() {
        if (activityPushTipsDataListBuilder_ == null) {
          activityPushTipsDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsData.Builder, emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.ActivityPushTipsDataOrBuilder>(
                  activityPushTipsDataList_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          activityPushTipsDataList_ = null;
        }
        return activityPushTipsDataListBuilder_;
      }

      private boolean cDDJDJIEPPJ_ ;
      /**
       * <code>bool CDDJDJIEPPJ = 190;</code>
       * @return The cDDJDJIEPPJ.
       */
      @java.lang.Override
      public boolean getCDDJDJIEPPJ() {
        return cDDJDJIEPPJ_;
      }
      /**
       * <code>bool CDDJDJIEPPJ = 190;</code>
       * @param value The cDDJDJIEPPJ to set.
       * @return This builder for chaining.
       */
      public Builder setCDDJDJIEPPJ(boolean value) {
        
        cDDJDJIEPPJ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool CDDJDJIEPPJ = 190;</code>
       * @return This builder for chaining.
       */
      public Builder clearCDDJDJIEPPJ() {
        
        cDDJDJIEPPJ_ = false;
        onChanged();
        return this;
      }

      private long gJBJNMHOGJD_ ;
      /**
       * <code>uint64 GJBJNMHOGJD = 215;</code>
       * @return The gJBJNMHOGJD.
       */
      @java.lang.Override
      public long getGJBJNMHOGJD() {
        return gJBJNMHOGJD_;
      }
      /**
       * <code>uint64 GJBJNMHOGJD = 215;</code>
       * @param value The gJBJNMHOGJD to set.
       * @return This builder for chaining.
       */
      public Builder setGJBJNMHOGJD(long value) {
        
        gJBJNMHOGJD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 GJBJNMHOGJD = 215;</code>
       * @return This builder for chaining.
       */
      public Builder clearGJBJNMHOGJD() {
        
        gJBJNMHOGJD_ = 0L;
        onChanged();
        return this;
      }

      private boolean nKFKPIGEDPE_ ;
      /**
       * <code>bool NKFKPIGEDPE = 370;</code>
       * @return The nKFKPIGEDPE.
       */
      @java.lang.Override
      public boolean getNKFKPIGEDPE() {
        return nKFKPIGEDPE_;
      }
      /**
       * <code>bool NKFKPIGEDPE = 370;</code>
       * @param value The nKFKPIGEDPE to set.
       * @return This builder for chaining.
       */
      public Builder setNKFKPIGEDPE(boolean value) {
        
        nKFKPIGEDPE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool NKFKPIGEDPE = 370;</code>
       * @return This builder for chaining.
       */
      public Builder clearNKFKPIGEDPE() {
        
        nKFKPIGEDPE_ = false;
        onChanged();
        return this;
      }

      private int firstDayStartTime_ ;
      /**
       * <code>uint32 first_day_start_time = 533;</code>
       * @return The firstDayStartTime.
       */
      @java.lang.Override
      public int getFirstDayStartTime() {
        return firstDayStartTime_;
      }
      /**
       * <code>uint32 first_day_start_time = 533;</code>
       * @param value The firstDayStartTime to set.
       * @return This builder for chaining.
       */
      public Builder setFirstDayStartTime(int value) {
        
        firstDayStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 first_day_start_time = 533;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstDayStartTime() {
        
        firstDayStartTime_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList nLHLFBLHABL_ = emptyIntList();
      private void ensureNLHLFBLHABLIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          nLHLFBLHABL_ = mutableCopy(nLHLFBLHABL_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @return A list containing the nLHLFBLHABL.
       */
      public java.util.List<java.lang.Integer>
          getNLHLFBLHABLList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(nLHLFBLHABL_) : nLHLFBLHABL_;
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @return The count of nLHLFBLHABL.
       */
      public int getNLHLFBLHABLCount() {
        return nLHLFBLHABL_.size();
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @param index The index of the element to return.
       * @return The nLHLFBLHABL at the given index.
       */
      public int getNLHLFBLHABL(int index) {
        return nLHLFBLHABL_.getInt(index);
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @param index The index to set the value at.
       * @param value The nLHLFBLHABL to set.
       * @return This builder for chaining.
       */
      public Builder setNLHLFBLHABL(
          int index, int value) {
        ensureNLHLFBLHABLIsMutable();
        nLHLFBLHABL_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @param value The nLHLFBLHABL to add.
       * @return This builder for chaining.
       */
      public Builder addNLHLFBLHABL(int value) {
        ensureNLHLFBLHABLIsMutable();
        nLHLFBLHABL_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @param values The nLHLFBLHABL to add.
       * @return This builder for chaining.
       */
      public Builder addAllNLHLFBLHABL(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNLHLFBLHABLIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nLHLFBLHABL_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 NLHLFBLHABL = 576;</code>
       * @return This builder for chaining.
       */
      public Builder clearNLHLFBLHABL() {
        nLHLFBLHABL_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private boolean iAFLDHGIHHL_ ;
      /**
       * <code>bool IAFLDHGIHHL = 935;</code>
       * @return The iAFLDHGIHHL.
       */
      @java.lang.Override
      public boolean getIAFLDHGIHHL() {
        return iAFLDHGIHHL_;
      }
      /**
       * <code>bool IAFLDHGIHHL = 935;</code>
       * @param value The iAFLDHGIHHL to set.
       * @return This builder for chaining.
       */
      public Builder setIAFLDHGIHHL(boolean value) {
        
        iAFLDHGIHHL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool IAFLDHGIHHL = 935;</code>
       * @return This builder for chaining.
       */
      public Builder clearIAFLDHGIHHL() {
        
        iAFLDHGIHHL_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList gECKEENCMOA_ = emptyLongList();
      private void ensureGECKEENCMOAIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          gECKEENCMOA_ = mutableCopy(gECKEENCMOA_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @return A list containing the gECKEENCMOA.
       */
      public java.util.List<java.lang.Long>
          getGECKEENCMOAList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(gECKEENCMOA_) : gECKEENCMOA_;
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @return The count of gECKEENCMOA.
       */
      public int getGECKEENCMOACount() {
        return gECKEENCMOA_.size();
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @param index The index of the element to return.
       * @return The gECKEENCMOA at the given index.
       */
      public long getGECKEENCMOA(int index) {
        return gECKEENCMOA_.getLong(index);
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @param index The index to set the value at.
       * @param value The gECKEENCMOA to set.
       * @return This builder for chaining.
       */
      public Builder setGECKEENCMOA(
          int index, long value) {
        ensureGECKEENCMOAIsMutable();
        gECKEENCMOA_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @param value The gECKEENCMOA to add.
       * @return This builder for chaining.
       */
      public Builder addGECKEENCMOA(long value) {
        ensureGECKEENCMOAIsMutable();
        gECKEENCMOA_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @param values The gECKEENCMOA to add.
       * @return This builder for chaining.
       */
      public Builder addAllGECKEENCMOA(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureGECKEENCMOAIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gECKEENCMOA_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 GECKEENCMOA = 1018;</code>
       * @return This builder for chaining.
       */
      public Builder clearGECKEENCMOA() {
        gECKEENCMOA_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private int iOIPJEMJLPP_ ;
      /**
       * <code>uint32 IOIPJEMJLPP = 1179;</code>
       * @return The iOIPJEMJLPP.
       */
      @java.lang.Override
      public int getIOIPJEMJLPP() {
        return iOIPJEMJLPP_;
      }
      /**
       * <code>uint32 IOIPJEMJLPP = 1179;</code>
       * @param value The iOIPJEMJLPP to set.
       * @return This builder for chaining.
       */
      public Builder setIOIPJEMJLPP(int value) {
        
        iOIPJEMJLPP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IOIPJEMJLPP = 1179;</code>
       * @return This builder for chaining.
       */
      public Builder clearIOIPJEMJLPP() {
        
        iOIPJEMJLPP_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList hIGJMLDHFIH_ = emptyIntList();
      private void ensureHIGJMLDHFIHIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          hIGJMLDHFIH_ = mutableCopy(hIGJMLDHFIH_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @return A list containing the hIGJMLDHFIH.
       */
      public java.util.List<java.lang.Integer>
          getHIGJMLDHFIHList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(hIGJMLDHFIH_) : hIGJMLDHFIH_;
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @return The count of hIGJMLDHFIH.
       */
      public int getHIGJMLDHFIHCount() {
        return hIGJMLDHFIH_.size();
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @param index The index of the element to return.
       * @return The hIGJMLDHFIH at the given index.
       */
      public int getHIGJMLDHFIH(int index) {
        return hIGJMLDHFIH_.getInt(index);
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @param index The index to set the value at.
       * @param value The hIGJMLDHFIH to set.
       * @return This builder for chaining.
       */
      public Builder setHIGJMLDHFIH(
          int index, int value) {
        ensureHIGJMLDHFIHIsMutable();
        hIGJMLDHFIH_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @param value The hIGJMLDHFIH to add.
       * @return This builder for chaining.
       */
      public Builder addHIGJMLDHFIH(int value) {
        ensureHIGJMLDHFIHIsMutable();
        hIGJMLDHFIH_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @param values The hIGJMLDHFIH to add.
       * @return This builder for chaining.
       */
      public Builder addAllHIGJMLDHFIH(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHIGJMLDHFIHIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hIGJMLDHFIH_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 HIGJMLDHFIH = 1207;</code>
       * @return This builder for chaining.
       */
      public Builder clearHIGJMLDHFIH() {
        hIGJMLDHFIH_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private int curScore_ ;
      /**
       * <code>uint32 cur_score = 1405;</code>
       * @return The curScore.
       */
      @java.lang.Override
      public int getCurScore() {
        return curScore_;
      }
      /**
       * <code>uint32 cur_score = 1405;</code>
       * @param value The curScore to set.
       * @return This builder for chaining.
       */
      public Builder setCurScore(int value) {
        
        curScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 cur_score = 1405;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurScore() {
        
        curScore_ = 0;
        onChanged();
        return this;
      }

      private int mFEJOIGPMGL_ ;
      /**
       * <code>uint32 MFEJOIGPMGL = 1521;</code>
       * @return The mFEJOIGPMGL.
       */
      @java.lang.Override
      public int getMFEJOIGPMGL() {
        return mFEJOIGPMGL_;
      }
      /**
       * <code>uint32 MFEJOIGPMGL = 1521;</code>
       * @param value The mFEJOIGPMGL to set.
       * @return This builder for chaining.
       */
      public Builder setMFEJOIGPMGL(int value) {
        
        mFEJOIGPMGL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 MFEJOIGPMGL = 1521;</code>
       * @return This builder for chaining.
       */
      public Builder clearMFEJOIGPMGL() {
        
        mFEJOIGPMGL_ = 0;
        onChanged();
        return this;
      }

      private boolean nEDGLDBBHJM_ ;
      /**
       * <code>bool NEDGLDBBHJM = 1555;</code>
       * @return The nEDGLDBBHJM.
       */
      @java.lang.Override
      public boolean getNEDGLDBBHJM() {
        return nEDGLDBBHJM_;
      }
      /**
       * <code>bool NEDGLDBBHJM = 1555;</code>
       * @param value The nEDGLDBBHJM to set.
       * @return This builder for chaining.
       */
      public Builder setNEDGLDBBHJM(boolean value) {
        
        nEDGLDBBHJM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool NEDGLDBBHJM = 1555;</code>
       * @return This builder for chaining.
       */
      public Builder clearNEDGLDBBHJM() {
        
        nEDGLDBBHJM_ = false;
        onChanged();
        return this;
      }

      private int aDMOADOKGGH_ ;
      /**
       * <code>uint32 ADMOADOKGGH = 1707;</code>
       * @return The aDMOADOKGGH.
       */
      @java.lang.Override
      public int getADMOADOKGGH() {
        return aDMOADOKGGH_;
      }
      /**
       * <code>uint32 ADMOADOKGGH = 1707;</code>
       * @param value The aDMOADOKGGH to set.
       * @return This builder for chaining.
       */
      public Builder setADMOADOKGGH(int value) {
        
        aDMOADOKGGH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ADMOADOKGGH = 1707;</code>
       * @return This builder for chaining.
       */
      public Builder clearADMOADOKGGH() {
        
        aDMOADOKGGH_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> lCEEJDLHMLF_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLCEEJDLHMLF() {
        if (lCEEJDLHMLF_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LCEEJDLHMLFDefaultEntryHolder.defaultEntry);
        }
        return lCEEJDLHMLF_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLCEEJDLHMLF() {
        onChanged();;
        if (lCEEJDLHMLF_ == null) {
          lCEEJDLHMLF_ = com.google.protobuf.MapField.newMapField(
              LCEEJDLHMLFDefaultEntryHolder.defaultEntry);
        }
        if (!lCEEJDLHMLF_.isMutable()) {
          lCEEJDLHMLF_ = lCEEJDLHMLF_.copy();
        }
        return lCEEJDLHMLF_;
      }

      public int getLCEEJDLHMLFCount() {
        return internalGetLCEEJDLHMLF().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */

      @java.lang.Override
      public boolean containsLCEEJDLHMLF(
          int key) {
        
        return internalGetLCEEJDLHMLF().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLCEEJDLHMLFMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLCEEJDLHMLF() {
        return getLCEEJDLHMLFMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLCEEJDLHMLFMap() {
        return internalGetLCEEJDLHMLF().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */
      @java.lang.Override

      public int getLCEEJDLHMLFOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLCEEJDLHMLF().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */
      @java.lang.Override

      public int getLCEEJDLHMLFOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLCEEJDLHMLF().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLCEEJDLHMLF() {
        internalGetMutableLCEEJDLHMLF().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */

      public Builder removeLCEEJDLHMLF(
          int key) {
        
        internalGetMutableLCEEJDLHMLF().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLCEEJDLHMLF() {
        return internalGetMutableLCEEJDLHMLF().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */
      public Builder putLCEEJDLHMLF(
          int key,
          int value) {
        
        
        internalGetMutableLCEEJDLHMLF().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; LCEEJDLHMLF = 1868;</code>
       */

      public Builder putAllLCEEJDLHMLF(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLCEEJDLHMLF().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder> musicGameInfoBuilder_;
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       * @return Whether the musicGameInfo field is set.
       */
      @java.lang.Override
      public boolean hasMusicGameInfo() {
        return detailCase_ == 861;
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       * @return The musicGameInfo.
       */
      @java.lang.Override
      public emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo getMusicGameInfo() {
        if (musicGameInfoBuilder_ == null) {
          if (detailCase_ == 861) {
            return (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_;
          }
          return emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
        } else {
          if (detailCase_ == 861) {
            return musicGameInfoBuilder_.getMessage();
          }
          return emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      public Builder setMusicGameInfo(emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo value) {
        if (musicGameInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          detail_ = value;
          onChanged();
        } else {
          musicGameInfoBuilder_.setMessage(value);
        }
        detailCase_ = 861;
        return this;
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      public Builder setMusicGameInfo(
          emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder builderForValue) {
        if (musicGameInfoBuilder_ == null) {
          detail_ = builderForValue.build();
          onChanged();
        } else {
          musicGameInfoBuilder_.setMessage(builderForValue.build());
        }
        detailCase_ = 861;
        return this;
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      public Builder mergeMusicGameInfo(emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo value) {
        if (musicGameInfoBuilder_ == null) {
          if (detailCase_ == 861 &&
              detail_ != emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance()) {
            detail_ = emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.newBuilder((emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_)
                .mergeFrom(value).buildPartial();
          } else {
            detail_ = value;
          }
          onChanged();
        } else {
          if (detailCase_ == 861) {
            musicGameInfoBuilder_.mergeFrom(value);
          }
          musicGameInfoBuilder_.setMessage(value);
        }
        detailCase_ = 861;
        return this;
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      public Builder clearMusicGameInfo() {
        if (musicGameInfoBuilder_ == null) {
          if (detailCase_ == 861) {
            detailCase_ = 0;
            detail_ = null;
            onChanged();
          }
        } else {
          if (detailCase_ == 861) {
            detailCase_ = 0;
            detail_ = null;
          }
          musicGameInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      public emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder getMusicGameInfoBuilder() {
        return getMusicGameInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      @java.lang.Override
      public emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder getMusicGameInfoOrBuilder() {
        if ((detailCase_ == 861) && (musicGameInfoBuilder_ != null)) {
          return musicGameInfoBuilder_.getMessageOrBuilder();
        } else {
          if (detailCase_ == 861) {
            return (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_;
          }
          return emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *SeaLampActivityDetailInfo sam_lamp_info = 5;
       *SalesmanActivityDetailInfo salesman_info = 7;
       *CrucibleActivityDetailInfo crucible_info = 8;
       *TrialAvatarActivityDetailInfo trial_avatar_info = 15;
       *CoinCollectDetailInfo coin_collect_info = 24;
       *RockBoardExploreDetailInfo rock_board_explore_info = 55;
       *BounceConjuringActivityDetailInfo bounce_conjuring_info = 73;
       *PotionActivityDetailInfo potion_info = 108;
       *SeaLampActivityInfo sea_lamp_info = 113;
       *MOEGLIENOCL monster_chess_detail_info = 128;
       *NGGOAFPKECJ treasure_hunt_v4_info = 136;
       *FleurFairActivityDetailInfo fleur_fair_info = 165;
       *POBPMCKMGEH animal_view_info = 170;
       *JOCFNENIFFM electrohercules_battle_v3_detail_info = 179;
       *TreasureMapActivityDetailInfo treasure_map_info = 182;
       *PFNDGPAHAGB filmfest_detail_info = 206;
       *BBMOMAAAMHL gcg_pve_info = 209;
       *MDKEDGEBLLC recharge_disk_detail_info = 217;
       *JNOAHALOBLI ugc_v2_info = 221;
       *ArenaChallengeActivityDetailInfo arena_challenge_info = 224;
       *HAPIKKCLOOB natlan_tour_detail_info = 231;
       *IJMMLAHDMDA watergun_info = 273;
       *EMBFCJBLLAD fleur_fair_v2_info = 291;
       *NBBIIELHBDP gcg_pve_puzzle_info = 294;
       *CharAmusementDetailInfo char_amusement_info = 315;
       *OFHNLPONCEO gcg_pve_infinite_info = 323;
       *BlessingActivityDetailInfo blessing_info = 331;
       *EffigyChallengeV2DetailInfo effigy_challenge_info = 347;
       *AKGMDFJHONF poetry_festival_detail_info = 382;
       *OBMDDMDLANI fairy_tales_detail_info = 389;
       *HKACPGEALAP effigy_challenge_v5_detail_info = 403;
       *DCNODEDPJBJ ceremony_info = 429;
       *PlantFlowerActivityDetailInfo plant_flower_info = 455;
       *BartenderActivityDetailInfo bartender_info = 485;
       *LEBJNMCBIIF gcg_festival_info = 507;
       *IslandPartyDetailInfo island_party_info = 543;
       *GECCKBCEPAM cooperate_challenge_detail_info = 551;
       *FindHilichurlDetailInfo find_hilichurl_info = 560;
       *IrodoriActivityDetailInfo irodori_info = 563;
       *AHCCKEKPJAL penumbra_adventure_info = 567;
       *BlitzRushActivityDetailInfo blitz_rush_info = 570;
       *DNIHFOEMJKN alchemy_sim_detail_info = 607;
       *LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 654;
       *ChessActivityDetailInfo chess_info = 669;
       *GachaActivityDetailInfo gacha_info = 675;
       *PGACPIGEOGC aka_fes_info = 682;
       *KDPMOKFOENA nahida_birth_detail_info = 692;
       *LLKJJELOFLH auto_time_stop_detail_info = 709;
       *EAJBDFKLJLJ great_festival_v2_detail_info = 768;
       *BuoyantCombatDetailInfo buoyant_combat_info = 773;
       *EchoShellDetailInfo echo_shell_info = 776;
       *SumoActivityDetailInfo sumo_info = 783;
       *LDJDMFMBGAP cook_game_detail_info = 788;
       *BIDBLDKLHDM goal_challenge_info = 806;
       *MJLGLIHPNKK bomber_dodoco_detail_info = 827;
       *KCDNNGFNBEB bullet_hell_detail_info = 830;
       *DuelHeartDetailInfo duel_heart_info = 835;
       *InstableSprayDetailInfo instable_spray_info = 851;
       * </pre>
       *
       * <code>.MusicGameActivityDetailInfo music_game_info = 861;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder> 
          getMusicGameInfoFieldBuilder() {
        if (musicGameInfoBuilder_ == null) {
          if (!(detailCase_ == 861)) {
            detail_ = emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.getDefaultInstance();
          }
          musicGameInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo.Builder, emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfoOrBuilder>(
                  (emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.MusicGameActivityDetailInfo) detail_,
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        detailCase_ = 861;
        onChanged();;
        return musicGameInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ActivityInfo)
    }

    // @@protoc_insertion_point(class_scope:ActivityInfo)
    private static final emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo();
    }

    public static emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ActivityInfo>
        PARSER = new com.google.protobuf.AbstractParser<ActivityInfo>() {
      @java.lang.Override
      public ActivityInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActivityInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ActivityInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ActivityInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.ActivityInfoOuterClass.ActivityInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ActivityInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ActivityInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ActivityInfo_BPAHOJFDILGEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ActivityInfo_BPAHOJFDILGEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ActivityInfo_LCEEJDLHMLFEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ActivityInfo_LCEEJDLHMLFEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ActivityInfo.proto\032\032ActivityPushTipsDa" +
      "ta.proto\032\031ActivityWatcherInfo.proto\032!Mus" +
      "icGameActivityDetailInfo.proto\"\213\007\n\014Activ" +
      "ityInfo\022\023\n\013MIJLJDBEEAA\030\001 \001(\010\022\026\n\016meet_con" +
      "d_list\030\002 \003(\r\022/\n\021watcher_info_list\030\003 \003(\0132" +
      "\024.ActivityWatcherInfo\022\020\n\010end_time\030\004 \001(\r\022" +
      "\023\n\013is_finished\030\006 \001(\010\022\022\n\nbegin_time\030\t \001(\r" +
      "\022\023\n\013IEPMKHMOCNI\030\n \001(\010\022\023\n\013schedule_id\030\013 \001" +
      "(\r\022\023\n\013activity_id\030\014 \001(\r\022\023\n\013IOFIKNBFOHI\030\r" +
      " \003(\r\022\025\n\ractivity_type\030\016 \001(\r\0223\n\013BPAHOJFDI" +
      "LG\030\037 \003(\0132\036.ActivityInfo.BPAHOJFDILGEntry" +
      "\022;\n\034activity_push_tips_data_list\030s \003(\0132\025" +
      ".ActivityPushTipsData\022\024\n\013CDDJDJIEPPJ\030\276\001 " +
      "\001(\010\022\024\n\013GJBJNMHOGJD\030\327\001 \001(\004\022\024\n\013NKFKPIGEDPE" +
      "\030\362\002 \001(\010\022\035\n\024first_day_start_time\030\225\004 \001(\r\022\024" +
      "\n\013NLHLFBLHABL\030\300\004 \003(\r\022\024\n\013IAFLDHGIHHL\030\247\007 \001" +
      "(\010\022\024\n\013GECKEENCMOA\030\372\007 \003(\004\022\024\n\013IOIPJEMJLPP\030" +
      "\233\t \001(\r\022\024\n\013HIGJMLDHFIH\030\267\t \003(\r\022\022\n\tcur_scor" +
      "e\030\375\n \001(\r\022\024\n\013MFEJOIGPMGL\030\361\013 \001(\r\022\024\n\013NEDGLD" +
      "BBHJM\030\223\014 \001(\010\022\024\n\013ADMOADOKGGH\030\253\r \001(\r\0224\n\013LC" +
      "EEJDLHMLF\030\314\016 \003(\0132\036.ActivityInfo.LCEEJDLH" +
      "MLFEntry\0228\n\017music_game_info\030\335\006 \001(\0132\034.Mus" +
      "icGameActivityDetailInfoH\000\0322\n\020BPAHOJFDIL" +
      "GEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0322" +
      "\n\020LCEEJDLHMLFEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value" +
      "\030\002 \001(\r:\0028\001B\010\n\006detailB\033\n\031emu.grasscutter." +
      "net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.getDescriptor(),
        });
    internal_static_ActivityInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ActivityInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ActivityInfo_descriptor,
        new java.lang.String[] { "MIJLJDBEEAA", "MeetCondList", "WatcherInfoList", "EndTime", "IsFinished", "BeginTime", "IEPMKHMOCNI", "ScheduleId", "ActivityId", "IOFIKNBFOHI", "ActivityType", "BPAHOJFDILG", "ActivityPushTipsDataList", "CDDJDJIEPPJ", "GJBJNMHOGJD", "NKFKPIGEDPE", "FirstDayStartTime", "NLHLFBLHABL", "IAFLDHGIHHL", "GECKEENCMOA", "IOIPJEMJLPP", "HIGJMLDHFIH", "CurScore", "MFEJOIGPMGL", "NEDGLDBBHJM", "ADMOADOKGGH", "LCEEJDLHMLF", "MusicGameInfo", "Detail", });
    internal_static_ActivityInfo_BPAHOJFDILGEntry_descriptor =
      internal_static_ActivityInfo_descriptor.getNestedTypes().get(0);
    internal_static_ActivityInfo_BPAHOJFDILGEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ActivityInfo_BPAHOJFDILGEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ActivityInfo_LCEEJDLHMLFEntry_descriptor =
      internal_static_ActivityInfo_descriptor.getNestedTypes().get(1);
    internal_static_ActivityInfo_LCEEJDLHMLFEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ActivityInfo_LCEEJDLHMLFEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.ActivityPushTipsDataOuterClass.getDescriptor();
    emu.grasscutter.net.proto.ActivityWatcherInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.MusicGameActivityDetailInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
